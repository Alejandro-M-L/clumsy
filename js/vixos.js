// Do not edit this file; automatically generated by build.py.
'use strict';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// C L U M S Y ////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ WALKER ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([
    /*"type": "walker",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/piernas.png",
            "width": 60,
            "height": 60,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_statement",
            "name": "NAME"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "120",
    "tooltip": "CLUMSY - WALKER",
    "helpUrl": ""*/
    {
  "type": "walker",
  "message0": "%1 %2",
  "args0": [
    {
      "type": "field_image",
      "src": "./images/png/piernas.png",
      "width": 30,
      "height": 30,
      "alt": "*",
      "flipRtl": false
    },
    {
      "type": "input_value",
      "name": "NAME"
    }
  ],
  "previousStatement": null,
  "nextStatement": null,
  "colour": 120,
  "tooltip": "CLUMSY - WALKER",
  "helpUrl": ""
}
]);


Blockly.JavaScript['walker'] = function (a) {
    return "@Clumsy:" + Blockly.JavaScript.statementToCode(a, "NAME") + "\n"
    //return "@Clumsy:" + (Blockly.JavaScript.statementToCode(a, "NAME")) + "\n"
    //return "@Clumsy:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + ""

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ WHEELS ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "wheels",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/ruedas.png",
            "width": 60,
            "height": 60,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_statement",
            "name": "NAME"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "120",
    "tooltip": "CLUMSY - WHEELS",
    "helpUrl": ""
}]);


Blockly.JavaScript['wheels'] = function (a) {
    return Blockly.JavaScript.statementToCode(a, 'NAME')


};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "eyes",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/robot.png",
            "width": 60,
            "height": 60,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_statement",
            "name": "NAME"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "120",
    "tooltip": "CLUMSY - EYES",
    "helpUrl": ""
}]);


Blockly.JavaScript['eyes'] = function (a) {
    return Blockly.JavaScript.statementToCode(a, 'NAME')


};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////  E Y E S - E F F E C T S  ///////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ LOAD PATTERN ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "load-pat",
    "message0": "Pattern %1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_pat.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "field_number",
            "name": "PAT",
            "value": 0,
            "min": 0,
            "max": 2
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "LOAD EYES PATTERN",
    "helpUrl": ""

}]);

Blockly.JavaScript['load-pat'] = function (block) {
    var number_pat = block.getFieldValue('PAT');

    return "Eye Load: " + number_pat + "\n"

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES - SIZE ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "e-size",
    "message0": "Size %1 L %2 %3 R",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_size.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "field_number",
            "name": "LEFT",
            "value": 0,
            "min": 0,
            "max": 10
    },
        {
            "type": "field_number",
            "name": "RIGHT",
            "value": 0,
            "min": 0,
            "max": 10
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "CLOSE AND OPEN",
    "helpUrl": ""

}]);



Blockly.JavaScript['e-size'] = function (block) {


    var text_left = block.getFieldValue('LEFT');
    var text_right = block.getFieldValue('RIGHT');

    return "Eye Size: " + text_left + " " + text_right + "\n"

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES - MOVE ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "e-move",
    "message0": "Move %1 X %2 %3 Y",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_move.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "field_number",
            "name": "X",
            "value": -3,
            "min": -3,
            "max": 3
    },
        {
            "type": "field_number",
            "name": "Y",
            "value": 3,
            "min": -3,
            "max": 3
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "MOVE THE PUPILS",
    "helpUrl": ""

}]);


Blockly.JavaScript['e-move'] = function (block) {


    var text_x = block.getFieldValue('X');
    var text_y = block.getFieldValue('Y');

    return "Eye Move: " + text_x + " " + text_y + "\n"

};


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES - COLOR ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "e-color",
    "message0": "Color %1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_pat.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "input_value",
            "name": "COLOUR",
            "check": "Colour"
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "CHANGE BACKLIGHT COLOR",
    "helpUrl": ""
}]);


Blockly.JavaScript['e-color'] = function (a) {
    return "Eye Color: " + (Blockly.JavaScript.valueToCode(a, "COLOUR", Blockly.JavaScript.ORDER_NONE)) + "\n"

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES - BRIGHT ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "e-bright",
    "message0": "Bright %1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_bright.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    }, {
            "type": "field_number",
            "name": "BRIGHT",
            "value": 0,
            "min": 0,
            "max": 31
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "CHANGE BACKLIGHT INTENSITY",
    "helpUrl": ""

}]);

Blockly.JavaScript['e-bright'] = function (block) {
    var number_bright = block.getFieldValue('BRIGHT');

    return "Eye Bright: " + number_bright + "\n"

};


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ EYES - BLINK ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "e-blink",
    "message0": "Blink %1",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/eye_blink.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#26a69a",
    "tooltip": "BLINK, BLINK",
    "helpUrl": ""
}]);


Blockly.JavaScript['e-blink'] = function (a) {
    return "Blink" + "\n"

};


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////  M O V E M E N T S  ///////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Move ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|
Blockly.defineBlocksWithJsonArray([
    /*"type": "m",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/forward.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "input_value",
            "name": "TEXT"
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "MOVE",
    "helpUrl": "120"*/
    {
  "type": "m",
  "message0": "%1 %2",
  "args0": [
    {
      "type": "field_image",
      "src": "./images/png/forward.png",
      "width": 30,
      "height": 30,
      "alt": "*",
      "flipRtl": false
    },
    {
      "type": "input_value",
      "name": "NAME"
    }
  ],
  "output": null,
  "colour": "#FFD600",
  "tooltip": "MOVE",
  "helpUrl": "120"
}
]);


Blockly.JavaScript['m'] = function (a) {
    //return ["Move Front" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_ATOMIC) || ""), Blockly.JavaScript.ORDER_ATOMIC]
    return "Move Front" + (Blockly.JavaScript.valueToCode(a, "NAME", Blockly.JavaScript.ORDER_NONE)) /////////mover aqui


};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Front: ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|
Blockly.defineBlocksWithJsonArray([{
    "type": "f",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/fast.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "input_value",
            "name": "TEXT"
    }
  ],
    "output": null,
    "colour": "#FFD600",
    "tooltip": "FRONT",
    "helpUrl": "120"
}]);


Blockly.JavaScript['f'] = function (a) {
    //return  "Fast:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE))
    //return [Blockly.JavaScript.quote_(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC ] 
    //return [(Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_ATOMIC) || " ") + "Fast:", Blockly.JavaScript.ORDER_ATOMIC]
    
    return [" Fast:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_ATOMIC) || ""), Blockly.JavaScript.ORDER_ATOMIC]
    
    //return  [Blockly.JavaScript.quote_(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC ] 
};





//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Move Front Fast ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "mff",
    "message0": "%1 %2 %3",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/forward.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "field_image",
            "src": "./images/png/fast.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "MOVE FRONT FAST",
    "helpUrl": "120"
}]);


Blockly.JavaScript['mff'] = function (a) {
    return "@Clumsy: Move Front Fast:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Move Front Slow ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "mfs",
    "message0": "%1 %2 %3",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/forward.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "field_image",
            "src": "./images/png/slow.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "MOVE FRONT SLOW",
    "helpUrl": ""
}]);


Blockly.JavaScript['mfs'] = function (a) {
    return "@Clumsy: Move Front Slow:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Move Back ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "mb",
    "message0": "%1 %2",
    "args0": [

        {
            "type": "field_image",
            "src": "./images/png/backward.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "MOVE BACK",
    "helpUrl": ""
}]);


Blockly.JavaScript['mb'] = function (a) {
    return "@Clumsy: Move Back:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Rotate Left ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "rl",
    "message0": "%1 %2",
    "args0": [

        {
            "type": "field_image",
            "src": "./images/png/left.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "ROTATE LEFT",
    "helpUrl": ""
}]);


Blockly.JavaScript['rl'] = function (a) {
    return "@Clumsy: Rotate Left:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};

//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Rotate Right ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "rr",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/right.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT"
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#FFD600",
    "tooltip": "ROTATE RIGHT",
    "helpUrl": ""
}]);


Blockly.JavaScript['rr'] = function (a) {
    return "@Clumsy: Rotate Right:" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ Steps ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "steps",
    "message0": "steps %1 %2",
    "args0": [
        {
            "type": "field_input",
            "name": "TEXT",
            "text": ""
    }, {

            "type": "field_image",
            "src": "./images/png/pasos.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
	},
  ],
    "output": null,
    "colour": "#FFD600",
    "tooltip": "Number of Steps",
    "helpUrl": ""
}]);


Blockly.JavaScript['steps'] = function (a) {

    return [Blockly.JavaScript.quote_(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC]
};




// Boton de MOVE FRONT

/*
Blockly.defineBlocksWithJsonArray([{
  "type": "move_front",
  "message0": "%1 %2  %3",
  "args0": [
    {
      "type": "field_image",
      "src": "./images/png/forward.png",
      "width": 20,
      "height": 20,
      "alt": "*",
      "flipRtl": false
    }, {
	  "type": "field_input",
      "name": "TEXT",
      "text": "Move Front"
	}, {
      "type": "input_value",
      "name": "TEXT"
    }
  ],
  "output": null,
  "colour": 120,
  "tooltip": "",
  "helpUrl": ""
}]);


Blockly.JavaScript['move_front'] = function(a) {
   
	 return  [Blockly.JavaScript.scrubNakedValue(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC] 
	
};

*/


// Boton de FAST

/*
Blockly.defineBlocksWithJsonArray([{
  "type": "fast",
  "message0": "%1 %2  %3",
  "args0": [
    {
      "type": "field_image",
      "src": "./images/png/fast.png",
      "width": 20,
      "height": 20,
      "alt": "*",
      "flipRtl": false
    }, {
	  "type": "field_input",
      "name": "TEXT",
      "text": "Fast"
	}, {
      "type": "input_value",
      "name": "TEXT"
    }
  ],
  "output": null,
  "colour": 120,
  "tooltip": "",
  "helpUrl": ""
}]);


Blockly.JavaScript['fast'] = function(a) {

   return  [Blockly.JavaScript.quote_(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC] 
};

*/


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////  T I M E  ///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Boton de delay

Blockly.defineBlocksWithJsonArray([{
    "type": "delay",
    "message0": "wait %1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/delay.png",
            "width": 15,
            "height": 15,
            "alt": "*",
            "flipRtl": false
    },

        {
            "type": "input_value",
            "name": "TEXT",
    }

  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#4FC3F7",
    "tooltip": "Delay",
    "helpUrl": ""
}]);


Blockly.JavaScript['delay'] = function (a) {
    return "delay" + (Blockly.JavaScript.valueToCode(a, "TEXT", Blockly.JavaScript.ORDER_NONE)) + "\n"

};


// Boton de miliseconds

Blockly.defineBlocksWithJsonArray([{
    "type": "miliseconds",
    "message0": "%1 miliseconds",
    "args0": [
        {
            "type": "field_input",
            "name": "TEXT",
            "text": ""
    },
  ],
    "output": null,
    "colour": "#4FC3F7",
    "tooltip": "Number of miliseconds",
    "helpUrl": ""
}]);


Blockly.JavaScript['miliseconds'] = function (a) {

    return [Blockly.JavaScript.quote_(a.getFieldValue("TEXT")), Blockly.JavaScript.ORDER_ATOMIC]
};


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// S O U N D S /////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*| [ SOUND - Fart ] *|*|*|*|*|*|*|*|*|*|*|*|*|*|*|*|

Blockly.defineBlocksWithJsonArray([{
    "type": "s1",
    "message0": "Pun %1",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/fart.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#B39DDB",
    "tooltip": "SOUND - FART",
    "helpUrl": ""
}]);


Blockly.JavaScript['s1'] = function (a) {
    return "P 1" + "\n"

};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// L I G H T S /////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// Police Car

Blockly.defineBlocksWithJsonArray([{
    "type": "police",
    "message0": "Police car %1",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/police.png",
            "width": 30,
            "height": 30,
            "alt": "*",
            "flipRtl": false
    }
  ],
    "previousStatement": null,
    "nextStatement": null,
    "colour": "#ffa726",
    "tooltip": "Delay",
    "helpUrl": ""
}]);


Blockly.JavaScript['police'] = function (a) {
    return "Light Effect: 1" + "\n"

};

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////// C O L O U R S /////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Boton de LCD 16X2

Blockly.defineBlocksWithJsonArray([{
    "type": "screen",
    "message0": "%1 %2",
    "args0": [
        {
            "type": "field_image",
            "src": "./images/png/lcd.png",
            "width": 50,
            "height": 50,
            "alt": "*",
            "flipRtl": false
    },
        {
            "type": "input_value",
            "name": "COLOUR",
            "check": "Colour"
    }
  ],
    "colour": 230,
    "tooltip": "",
    "helpUrl": ""
}]);




Blockly.JavaScript['screen'] = function (a) {
    return "color" + (Blockly.JavaScript.valueToCode(a, "COLOUR", Blockly.JavaScript.ORDER_NONE)) + "\n"

};
/*-----------------------------------------Funcion save()-----------------------------------*/
function save() {
    var xml = Blockly.Xml.workspaceToDom(Blockly.mainWorkspace);
    var data = Blockly.Xml.domToText(xml);
    // Store data in blob.
    // var builder = new BlobBuilder();
    // builder.append(data);
    // saveAs(builder.getBlob('text/plain;charset=utf-8'), 'blockduino.xml');
    var name = document.getElementById('sketch_name').value;
    console.log("saving blob");
    var blob = new Blob([data], {
        type: 'text/xml'
    });
    saveAs(blob, name + '.xml');
    //////////// ios
    fs_error = function() { // don't create more object URLs than needed 
    if (blob_changed || !object_url) {
        object_url = get_URL().createObjectURL(blob);
    } if (target_view) { 
        target_view.location.href = object_url;
    } else { 
        var new_tab = view.open(object_url, "_blank");
        if (new_tab == undefined && typeof safari !== "undefined") { 
            //Apple do not allow window.open, see http://bit.ly/1kZffRI 
            view.location.href = object_url } 
    } filesaver.readyState = filesaver.DONE; 
        dispatch_all(); 
        revoke(object_url); 
    } 
    ////////////////
    

}
/*-----------------------------------------Funcion open()-----------------------------------*/
function load(event) {
    // Crear función de escucha de eventos de File Reader
    var parseInputXMLfile = function (e) {
        var xmlFile = e.target.files[0];
        var filename = xmlFile.name;// lo puedo quitar 
        //var extensionPosition = filename.lastIndexOf('.');
        /*if (extensionPosition !== -1) {
            filename = filename.substr(0, extensionPosition);
        }*/
        var reader = new FileReader();
        reader.onloadend = function (event) {
            var target = event.target;
            // 2 == FileReader.DONE
            if (target.readyState == 2) {
                try {/////////////////////////////// valida que sea un XML
                    var xml = Blockly.Xml.textToDom(target.result);
                } catch (e) {
                    alert('Error al analizar XML:\n' + e);
                    return;
                }
                var count = Blockly.mainWorkspace.getAllBlocks().length;
                if (count && confirm('¿Reemplazar bloques existentes?\n"Cancelar" se fusionará.')) {
                    Blockly.mainWorkspace.clear();
                    //workspace.clear(); /*borra*/
                }
                
                Blockly.Xml.domToWorkspace(Blockly.mainWorkspace, xml);
            }
            // Restablece el valor de la entrada después de cargar porque Chrome no se disparará
            // un evento de 'cambio' si el mismo archivo se carga nuevamente.
            //document.getElementById('load').value == '';  //lo comente por error null
        };
        document.getElementById('select_file').value = '';
        reader.readAsText(xmlFile,'UTF-8');
    };
    
    // Cree un botón de exploración una vez invisible con escucha de eventos y haga clic en él
    var selectFile = document.getElementById('select_file');
    if (selectFile === null) {
        var selectFileDom = document.createElement('INPUT');
        selectFileDom.type = 'file';
        selectFileDom.id = 'select_file';

        var selectFileWrapperDom = document.createElement('DIV');
        //selectFileWrapperDom.id = 'select_file_wrapper';
        //selectFileWrapperDom.style.display = 'none';
        selectFileWrapperDom.appendChild(selectFileDom);
        
        document.body.appendChild(selectFileWrapperDom);
        selectFile = document.getElementById('select_file');
        selectFile.addEventListener('change', parseInputXMLfile);
    }
    selectFile.click();

}

/*-------------------------------- Funcion de borrar bloques------------------------------*/
        function Limpiar() {
            /*document.getElementById('CodigoResultante').innerHTML = '';--------Solo borraba lo de CodigoResultante, pero dejaba bloques--*/
            //#select_file
            //document.getElementById('select_file').value = '';
            var count = workspace.getAllBlocks(false).length; /*Agrego un contador por cada bloque que se agregue*/
            if (count < 2 || window.confirm(Blockly.Msg['DELETE_ALL_BLOCKS'].replace('%1', count))) {
                /*si son mas de dos bloque piede confirmación para borrar*/
                workspace.clear(); /*borra*/
                if (window.location.hash) {
                    /*manda mesaje de confirmación*/
                    window.location.hash = '';
                }
            }
        }

